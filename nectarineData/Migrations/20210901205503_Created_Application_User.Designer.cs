// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nectarineData.DataAccess;

namespace nectarineData.Migrations
{
    [DbContext(typeof(NectarineDbContext))]
    [Migration("20210901205503_Created_Application_User")]
    partial class Created_Application_User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nectarineData.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StripeCustomerId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("nectarineData.Models.PaymentMethodId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TokenId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("PaymentMethodId");
                });

            modelBuilder.Entity("nectarineData.Models.PaymentMethodId", b =>
                {
                    b.HasOne("nectarineData.Models.ApplicationUser", null)
                        .WithMany("PaymentMethodIds")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("nectarineData.Models.ApplicationUser", b =>
                {
                    b.Navigation("PaymentMethodIds");
                });
#pragma warning restore 612, 618
        }
    }
}
